stages:
  - setup # install dependencies
  - test # run tests
  - build # build and push docker image

variables:
  NODE_IMAGE_VERSION: '14.15.3-alpine3.12'

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

install_dependencies:
  image: node:${NODE_IMAGE_VERSION}
  stage: setup
  cache:
    key: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_DIR}
    paths:
      - node_modules/
  script:
    - npm install

test_unit-tests:
  image: node:${NODE_IMAGE_VERSION}
  cache:
    key: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_DIR}
    paths:
      - node_modules/
    policy: pull
  stage: test
  script:
    - npm run test:unit:ci

test_code-lint:
  image: node:${NODE_IMAGE_VERSION}
  cache:
    key: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_DIR}
    paths:
      - node_modules/
    policy: pull
  stage: test
  script:
    - npm run lint:nofix

build_development:
  image: node:${NODE_IMAGE_VERSION}
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_DIR}
    paths:
      - node_modules/
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: on_success
  script:
    - npm run build
